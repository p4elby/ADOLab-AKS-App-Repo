name: ADO Lab-CI-CD-ToDoApp $(rev:r)
variables:
  - name: ASPNETCORE_ENVIRONMENT
    value: Production 
  - name: BuildConfiguration
    value: Release
  - name: BuildPlatform
    value: 'any cpu'
trigger:
  branches:
    include:
      - main
stages:
  - stage: Build
    displayName: Build
    variables:
      - group: ToDo_App_Vars
      - group: DEV-TF-VARS
    jobs:
      - job: Build  
        pool: 
          name: ARTSEM_KAPUSTSIN
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk '
            inputs:
              version: '$(net_core_sdk_version)'
              installationPath: '$(Agent.ToolsDirectory)\dotnet'

          - task: DotNetCoreCLI@2
            displayName: 'Migrations script'
            inputs:
              command: custom
              custom: ef
              arguments: 'migrations script -p DotNetCoreSqlDb.csproj -o sql\DbMigration.sql'

          - task: CopyFiles@2
            displayName: 'Copy Files'
            inputs:
              SourceFolder: 'C:\sql'
              Contents: '**.zip'
              TargetFolder: '$(System.DefaultWorkingDirectory)/sql/DbMigration.sql'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact SQL'
            inputs:
              PathtoPublish: '$(System.DefaultWorkingDirectory)/sql/DbMigration.sql'
              ArtifactName: sql

          - task: DotNetCoreCLI@2
            displayName: Restore
            inputs:
              command: restore
              projects: '$(Parameters.RestoreBuildProjects)'
              workingDirectory: '$(System.DefaultWorkingDirectory)'

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              projects: '$(Parameters.RestoreBuildProjects)'
              arguments: '--configuration $(BuildConfiguration)'

          - task: DotNetCoreCLI@2
            displayName: Test
            inputs:
              command: test
              projects: '$(Parameters.TestProjects)'
              arguments: '--configuration $(BuildConfiguration)'

          - task: DotNetCoreCLI@2
            displayName: Publish
            inputs:
              command: publish
              arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
              zipAfterPublish: True

          - task: CopyFiles@2
            displayName: 'Copy Files'
            inputs:
              SourceFolder: '$(build.artifactstagingdirectory)'
              Contents: '**.zip'
              TargetFolder: 'C:\Artifact_ToDo'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact dotnet'
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)'
              ArtifactName: dotnet
            condition: succeededOrFailed()

  - stage: DeployEnv
    condition: in(stageDependencies.Build.Build.result, 'Succeeded')
    displayName: Deploy_DEV
    variables:
      - group: ToDo_App_Vars
      - group: DEV-TF-VARS
      - name: ASPNETCORE_ENVIRONMENT
        value: Production
    jobs:
      - job: DeployEnv
        displayName: Deploy_job_DEV
        pool:
          name: ARTSEM_KAPUSTSIN
          demands: sqlpackage 
        steps:
          - task: SqlAzureDacpacDeployment@1
            displayName: 'Azure SQL'
            inputs:
              azureSubscription: 'Visual Studio Professional Subscription (909760ee-feaf-46f3-80d2-6eb7d0ce640c)'
              ServerName: '$(azure_sql_name)'
              DatabaseName: 'sqldb-$(TF_VAR_RESOURCE_NAME_PREFIX)-$(TF_VAR_LOCATION)-$(TF_VAR_ENV)'
              SqlUsername: '$(TF_VAR_SQL_SERVER_ADMINISTRATOR_LOGIN)'
              SqlPassword: '$(SQL_SERVER_ADMIN_PASS)'
              deployType: SqlTask
              SqlFile: 'C:\sql\DbMigration.sql'
          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy App'
            inputs:
              azureSubscription: 'Visual Studio Professional Subscription (909760ee-feaf-46f3-80d2-6eb7d0ce640c)'
              WebAppName: 'app-$(TF_VAR_RESOURCE_NAME_PREFIX)-$(TF_VAR_LOCATION)-$(TF_VAR_ENV)'
              packageForLinux: 'C:\Artifact_ToDo\**\*.zip'                      